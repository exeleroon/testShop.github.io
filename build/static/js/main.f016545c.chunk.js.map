{"version":3,"sources":["reportWebVitals.js","svgIcons/cart.svg","svgIcons/unstar.svg","svgIcons/home.svg","svgIcons/star.svg","store/favorites/types.js","store/general/types.js","Api/goodsItems.jsx","store/general/actions.js","Components/cards.jsx","store/favorites/actions.js","Pages/Goods.jsx","Pages/Favorite.jsx","Pages/ProductInCart.jsx","store/cart/types.js","Pages/controlesFormik.jsx","store/cart/actions.js","Cart.jsx","Components/modal/Modal.jsx","Components/buttons/BtnComponent.jsx","App.js","store/general/rootReducer.js","store/favorites/favReducer.js","store/cart/cartReducer.js","store/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_FAVORITES","INITIAL_FAVORITES","SAVE_PRODUCTS","LOADING_PRODUCTS","IS_MODAL_ADD_TO_CART_OPEN","IS_MODAL_ADD_TO_CART_CLOSE","IS_MODAL_REMOVE_FROM_CART","IS_MODAL_REMOVE_FROM_CART_CLOSE","TO_BUY","CLOSE_TO_BUY_MODAL","BUYER_INFO","getGoods","fetch","response","json","isModalAddToCartCloseModal","type","isModalCartRemoveItemClose","closeModalToBuy","Cards","product","name","price","src","article","color","dataFav","closeBtn","id","dispatch","useDispatch","isFavorite","useSelector","state","favorites","some","elem","isModalAddToCartOpen","payload","isModalAddToCart","className","data-x","onClick","handleFavorite","unStar","star","alt","Goods","cards","showGoods","map","Favorite","favoritesContentId","allGoods","general","products","isLoading","favProducts","forEach","targetFav","find","item","push","length","GoodsOfCart","openModalToRemove","isModalCartRemoveItem","SET_CART","INITIAL_CART_ID","CART_PRODUCT_REMOVE","BUY_IMITATION","FormModal","props","closeModal","boughtGoods","clearState","initialValues","surname","age","address","contact","onSubmit","values","form","localStorage","setItem","JSON","stringify","console","log","validate","errors","touched","isSubmitting","handleBlur","handleChange","handleSubmit","style","margin","backgroundColor","textAlign","htmlFor","onChange","onBlur","value","disabled","defaultProps","CartGoods","cartContentId","cart","totalGoods","isLoadingCartItems","tuBuyAction","toBuyModal","inCartProducts","targetCart","handleToBuy","ProductInCart","test","toString","header","text","Modal","modalBtns","Button","this","bgColor","toggleBtn","background","Component","App","reduxAllGoods","favFromRedux","cartFromRedux","isModalAddToCartAction","nearestCartId","closestId","removeCartItemFromModal","isModalRemoveFromCart","useEffect","res","favFromLocal","getItem","cartFromLocal","initialFavorites","parse","initialCart","handleModalCloseAddToCart","removeItemModalClose","cartActions","deleteCartActions","history","useHistory","handleClick","homeIcon","exact","path","Cart","toUpperCase","initialState","buyerInformation","generalReducer","action","favReducer","currentFavId","existFavorite","favItems","newFavArr","filter","cartRootReducer","currentCartId","existCart","cartItems","newCartArr","clickedRemoveItemId","existRefreshCart","refreshCartArr","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","rootReducer","combineReducers","favoriteReducer","cartReducer","store","createStore","compose","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f016545c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/cart.35b27c56.svg\";","export default __webpack_public_path__ + \"static/media/unstar.6716962f.svg\";","export default __webpack_public_path__ + \"static/media/home.d6fd6063.svg\";","export default __webpack_public_path__ + \"static/media/star.facb9b36.svg\";","export const SET_FAVORITES = \"SET_FAVORITES\";\r\nexport const INITIAL_FAVORITES = \"INITIAL_FAVORITES\";","export const SAVE_PRODUCTS = \"SAVE-PRODUCTS\";\r\nexport const LOADING_PRODUCTS = \"LOADING-PRODUCTS\";\r\nexport const IS_MODAL_ADD_TO_CART_OPEN = 'IS_MODAL_ADD_TO_CART_OPEN';\r\nexport const IS_MODAL_ADD_TO_CART_CLOSE = 'IS_MODAL_ADD_TO_CART_CLOSE';\r\nexport const IS_MODAL_REMOVE_FROM_CART = 'IS_MODAL_REMOVE_FROM_CART';\r\nexport const IS_MODAL_REMOVE_FROM_CART_CLOSE = 'IS_MODAL_REMOVE_FROM_CART_CLOSE';\r\nexport const TO_BUY = 'TO_BUY';\r\nexport const CLOSE_TO_BUY_MODAL = 'CLOSE_TO_BUY_MODAL';\r\nexport const BUYER_INFO = 'BUYER_INFO';\r\n","// import React, { Component, useEffect, useState } from 'react'\r\n// import Modal from '../Components/modal/Modal'\r\n\r\n\r\n// const useApiGoods = () => {\r\n\r\n//     useEffect(() => {\r\n//       fetch('/goods.json')\r\n//         .then(res => {\r\n//           return res.json();\r\n//         })\r\n//         .then((data) => {\r\n//             data.goods\r\n//          })\r\n//     }, []) \r\n//     return data.goods\r\n// }\r\n// return fetch(\"/goods.json\")\r\n// .then((response) => response.json()\r\n// })\r\n// .then((data) => {\r\n//   setGoods(data);\r\n// });\r\n\r\nconst getGoods = () => {\r\n  return fetch(\"/goods.json\")\r\n  .then(response => response.json())\r\n}\r\nexport default getGoods;\r\n","import * as type from './types';\r\nimport getGoods from \"../../Api/goodsItems\"\r\n\r\nexport const loadGoods = () => (dispatch) => {\r\n    dispatch({ type: type.LOADING_PRODUCTS, payload: true });\r\n    getGoods().then((res) => {\r\n        dispatch({ type: type.SAVE_PRODUCTS, payload: res });\r\n        dispatch({ type: type.LOADING_PRODUCTS, payload: false });\r\n    });\r\n};\r\n\r\nexport const isModalAddToCart = (id) => ({\r\n    type: type.IS_MODAL_ADD_TO_CART_OPEN,\r\n    payload: id,\r\n}) \r\n\r\nexport const isModalAddToCartCloseModal = () => ({\r\n    type: type.IS_MODAL_ADD_TO_CART_CLOSE,\r\n})\r\n\r\nexport const isModalCartRemoveItem = (id) => ({\r\n    type: type.IS_MODAL_REMOVE_FROM_CART,\r\n    payload: id\r\n})\r\n\r\nexport const isModalCartRemoveItemClose = () => ({\r\n    type: type.IS_MODAL_REMOVE_FROM_CART_CLOSE\r\n})\r\n\r\nexport const confirmBuy = () => ({\r\n    type: type.TO_BUY\r\n})\r\n\r\nexport const closeModalToBuy = () => ({\r\n    type: type.CLOSE_TO_BUY_MODAL\r\n})\r\n\r\nexport const buyerInfo = (info) => ({\r\n    type: type.BUYER_INFO,\r\n    payload: info\r\n})","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport star from \"../svgIcons/star.svg\";\r\nimport unStar from \"../svgIcons/unstar.svg\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleFavorite } from '../store/favorites/actions';\r\nimport { isModalAddToCart } from \"../store/general/actions\";\r\n\r\n\r\nconst Cards = ({ product }) => {\r\n  let { name, price, src, article, color, dataFav, closeBtn, id } = product;\r\n\r\n  const dispatch = useDispatch();\r\n  const favoriteArrayId = useSelector(state => state.favorites);\r\n  const isFavorite = favoriteArrayId.some(elem => elem === id);\r\n\r\n  if (closeBtn) {\r\n    closeBtn = \"X\";\r\n  }\r\n\r\n  const handleIsFavorite = () => {\r\n    dispatch(handleFavorite(id));\r\n  }\r\n\r\n  const isModalAddToCartOpen = () => {\r\n    dispatch(isModalAddToCart(id));\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"card-container\" data-x={dataFav}>\r\n      <span className=\"star\">\r\n        <img\r\n          className=\"starClick\"\r\n          onClick={handleIsFavorite}\r\n          src={isFavorite ? unStar : star} alt=\"favIcon\"\r\n        ></img>\r\n      </span>\r\n      <img src={src} alt='img'></img>\r\n      <h5 className=\"card-title\">{name}</h5>\r\n      <span className=\"list-group-item\">Article: {article}</span>\r\n      <span className=\"list-group-item\">Color: {color}</span>\r\n      <div className=\"card-footer\">\r\n        <span>${price}</span>\r\n        <button\r\n          onClick={() => {isModalAddToCartOpen(id)}}\r\n          className=\"btn-primary btn\"\r\n        >\r\n          Add to cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCards.propTypes = {\r\n  name: PropTypes.string,\r\n  price: PropTypes.string,\r\n  src: PropTypes.string,\r\n  article: PropTypes.string,\r\n  color: PropTypes.string,\r\n  dataFav: PropTypes.number,\r\n};\r\n\r\nexport default Cards;\r\n","import * as type from './types';\r\n\r\nexport const initialFavorites = (favFromLocal) => ({\r\n    type: type.INITIAL_FAVORITES,\r\n    payload: favFromLocal\r\n});\r\n\r\nexport const handleFavorite = (id) => ({\r\n    type: type.SET_FAVORITES,\r\n    payload: id\r\n});","import \"../App.css\";\r\nimport React from \"react\";\r\nimport Cards from \"../Components/cards\";\r\n\r\nconst Goods = ({ showGoods }) => {\r\n  const cards = showGoods.map((product) => {\r\n    return (\r\n      <Cards\r\n        product={product}\r\n        key={product.id}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cards\">{cards}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Goods;\r\n","import \"../App.css\";\r\nimport React  from \"react\";\r\nimport Cards from \"../Components/cards\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Favorite = () => {\r\n  const favoritesContentId = useSelector((state) => state.favorites);\r\n  const allGoods = useSelector((state) => state.general.products);\r\n  const isLoading = useSelector((state) => state.general.isLoading);\r\n\r\n  const favProducts = [];\r\n\r\n  favoritesContentId.forEach((id) => {\r\n    const targetFav = allGoods.find((item) => item.id === id);\r\n    favProducts.push(targetFav);\r\n  })\r\n  \r\n  return (\r\n    <div className=\"cards\">\r\n      {favProducts.length === 0 || isLoading ? (\r\n        <p>NO FAVORITES</p>\r\n      ) : (\r\n        favProducts.map((product) => (\r\n          <Cards\r\n            product={product}\r\n            key={product.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { isModalCartRemoveItem } from \"../store/general/actions\";\r\n\r\n\r\nconst GoodsOfCart = ({ product }) => {\r\n  let { name, price, src, article, color, dataFav, closeBtn, id } = product;\r\n  \r\n  if (closeBtn) {\r\n    closeBtn = \"X\";\r\n  }\r\n  const dispatch = useDispatch();\r\n\r\n  const openModalToRemove = () => {\r\n    dispatch(isModalCartRemoveItem(id));\r\n  }\r\n\r\n  return (\r\n    <div className=\"card-container\" data-x={dataFav}>\r\n      <span className=\"removeFromCart\">{closeBtn}</span>\r\n      <img src={src} alt='star'></img>\r\n      <h5 className=\"card-title\">{name}</h5>\r\n      <span className=\"list-group-item\">Article: {article}</span>\r\n      <span className=\"list-group-item\">Color: {color}</span>\r\n      <div className=\"card-footer\">\r\n        <span>${price}</span>\r\n        <button\r\n          onClick={() => openModalToRemove(id)}\r\n          className=\"btn-primary btn\">\r\n          Delete from cart\r\n        </button>\r\n      </div>    \r\n    </div>\r\n  );\r\n};\r\n\r\nGoodsOfCart.propTypes = {\r\n  name: PropTypes.string,\r\n  price: PropTypes.string,\r\n  src: PropTypes.string,\r\n  article: PropTypes.string,\r\n  color: PropTypes.string,\r\n  dataFav: PropTypes.number,\r\n};\r\n\r\nexport default GoodsOfCart;\r\n","export const SET_CART = 'SET_CART';\r\nexport const INITIAL_CART_ID = 'INITIAL_CART_ID';\r\nexport const CART_PRODUCT_REMOVE = 'CART_PRODUCT_REMOVE';\r\nexport const BUY_IMITATION = 'BUY_IMITATION';","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Formik } from 'formik';\r\nimport '../App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModalToBuy, buyerInfo } from '../store/general/actions';\r\nimport { buyImitation } from '../store/cart/actions';\r\n\r\n\r\n\r\nconst FormModal = (props) =>  {\r\n    let { closeBtn, closeModal, boughtGoods } = props;\r\n      if (closeBtn) {\r\n        closeBtn = 'X'\r\n    }\r\n    const dispatch = useDispatch();\r\n\r\n    const HandleCloseModalBuy = () => {\r\n        dispatch(closeModalToBuy())\r\n    }\r\n\r\n    const clearState = () => {\r\n        dispatch(buyImitation())\r\n    }\r\n\r\n    const handleSubmitForm = (values) => {\r\n            const form = {\r\n                name: values.name,\r\n                surname: values.surname,\r\n                age: values.age,\r\n                address: values.address,\r\n                contact: values.contact\r\n            }\r\n            localStorage.setItem('Ordered', JSON.stringify(form));\r\n        const pushBuyer = () => {\r\n            dispatch(buyerInfo(form))\r\n        }\r\n            pushBuyer();\r\n            HandleCloseModalBuy();\r\n            clearState();\r\n            console.log(`Buyer:`, form);\r\n    }\r\n\r\n    const handleValidate = (values) => {\r\n          const { name, surname, age, address, contact } = values;\r\n          const errors = {};\r\n        \r\n        if(!name) {\r\n            errors.name = 'Enter the name'\r\n        }\r\n        if(!surname) {\r\n            errors.surname = 'Enter the surname'\r\n        }\r\n        if(!age) {\r\n            errors.age = 'Enter the age'\r\n        }\r\n        if(!address) {\r\n            errors.address = 'Enter the address'\r\n        }\r\n        if(!contact) {\r\n            errors.contact = 'Enter your mobile number'\r\n        }\r\n        return errors\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n        <Formik\r\n            initialValues={{\r\n                name: '',\r\n                surname: '',\r\n                age: '',\r\n                address: '',\r\n                contact: ''\r\n            }}\r\n            onSubmit={handleSubmitForm}\r\n            validate={handleValidate}\r\n        >\r\n            {({ values, errors, touched, isSubmitting, handleBlur, handleChange, handleSubmit}) => {\r\n                return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"modal show\">\r\n          <div className=\"modal-dialog\" style={{margin: '120px auto'}}>\r\n            <div className='modal-content' style={{backgroundColor: '#0d6efd'}} >\r\n            <div className='modal-header'> Are you confirm to buy this items?\r\n                <span onClick={closeModal} className='close-Btn close'>\r\n                  {closeBtn}\r\n                </span>\r\n            </div>\r\n              <div className='modal-body' style={{ textAlign: 'left' }} >\r\n                <label htmlFor='name'>Name: </label>\r\n                <input name=\"name\" type=\"text\" onChange={handleChange} onBlur={handleBlur} value={values.name} id=\"name\" />\r\n                {touched.name && errors.name && (<div className=\"error\" style={{color:'red'}}>{errors.name}</div> )}\r\n                <div>\r\n                    <label htmlFor='surname'>Surname: </label>\r\n                    <input name=\"surname\" type=\"text\" onChange={handleChange} onBlur={handleBlur} value={values.surname} id=\"surname\" />\r\n                {touched.surname && errors.surname && (<div className=\"error\" style={{color: 'red'}}>{errors.surname}</div>)}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"age\">Age: </label>\r\n                    <input name='age' type=\"number\" onChange={handleChange} onBlur={handleBlur} value={values.age} id=\"age\" />\r\n                {touched.age && errors.age && (<div className=\"error\" style={{color: 'red'}}>{errors.age}</div>)}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='address' >Address: </label>\r\n                    <input name='address' type=\"text\" onChange={handleChange} onBlur={handleBlur} value={values.address} id=\"address\" />\r\n                {touched.address && errors.address && (<div className=\"error\" style={{color: 'red'}}>{errors.address}</div>)}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='contact'>Mobile phone: </label>\r\n                    <input name='contact' type=\"text\" onChange={handleChange} onBlur={handleBlur} value={values.contact} id='contact' />\r\n                {touched.contact && errors.contact && (<div className=\"error\" style={{color: 'red'}}>{errors.contact} </div>)}\r\n                </div>\r\n              </div>\r\n            <div className='modal-body btns'>\r\n              <button onClick={boughtGoods} className='buyBtn' type=\"submit\" disabled={isSubmitting} >BUY</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n            )\r\n        }}\r\n        </Formik>\r\n      </div> )\r\n}   \r\n\r\n   FormModal.propTypes = {\r\n    header: PropTypes.string,\r\n    closeModal: PropTypes.func,\r\n    text: PropTypes.string\r\n  }\r\n  \r\n  FormModal.defaultProps = {\r\n    closeBtn: 'X'\r\n  }\r\n\r\n  export default FormModal\r\n  ","import * as type from './types';\r\n\r\nexport const initialCart = (cartFromLocal) => ({\r\n    type: type.INITIAL_CART_ID,\r\n    payload: cartFromLocal\r\n})\r\n\r\nexport const addToCartItem = (id) => ({\r\n    type: type.SET_CART,\r\n    payload: id\r\n})\r\n\r\nexport const removeFromCartId = (id) => ({\r\n    type: type.CART_PRODUCT_REMOVE,\r\n    payload: id\r\n})\r\n\r\nexport const buyImitation = () => ({\r\n    type: type.BUY_IMITATION\r\n})\r\n\r\n\r\n\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport ProductInCart from \"./Pages/ProductInCart\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FormikModal from './Pages/controlesFormik';\r\nimport { confirmBuy, closeModalToBuy } from './store/general/actions';\r\n\r\n\r\nconst CartGoods = () => {\r\n  const cartContentId = useSelector((state) => state.cart);\r\n  const totalGoods = useSelector((state) => state.general.products);\r\n  const isLoadingCartItems = useSelector((state) => state.general.isLoading);\r\n  const tuBuyAction = useSelector((state) => state.general.toBuyModal);\r\n  const dispatch = useDispatch();\r\n\r\n  const inCartProducts = [];\r\n\r\n  cartContentId.forEach((id) => {\r\n    const targetCart = totalGoods.find((item) => item.id === id);\r\n    inCartProducts.push(targetCart);\r\n  })\r\n\r\n  const boughtItems = () => {\r\n    if(!isLoadingCartItems) {\r\n      const test = inCartProducts.map((item) => {\r\n        return item.name\r\n      })\r\n      return console.log('Thanks you bought =>', test.toString());\r\n    }\r\n  }\r\n\r\n  \r\n  const handleToBuy = () => {\r\n    dispatch(confirmBuy());\r\n  }\r\n\r\n  const handleCloseModalToBuy = () => {\r\n    dispatch(closeModalToBuy());\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cards\">\r\n        {inCartProducts.length === 0 || isLoadingCartItems ? (\r\n          <p>Products is loading ...</p>\r\n        ) : (\r\n          inCartProducts.map((product) => (\r\n            <ProductInCart\r\n              product={product}\r\n              key={product.id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      {tuBuyAction && <FormikModal boughtGoods={boughtItems} header={'test'} text=\"asd\" closeModal={handleCloseModalToBuy} />}\r\n      {inCartProducts.length !== 0 && <button onClick={() => handleToBuy()} className=\"btn-primary confirm\">To order</button>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartGoods;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Modal = (props) =>  {\r\n    let {header, closeBtn, text, closeModal, modalBtns} = props;\r\n      if (closeBtn) {\r\n        closeBtn = 'X'\r\n      }\r\n    \r\n    return (\r\n        <div className=\"modal show\">\r\n          <div className=\"modal-dialog\">\r\n            <div className='modal-content'>\r\n            <div className='modal-header'>{header}\r\n                <span onClick={closeModal} className='close-Btn close'>\r\n                  {closeBtn}\r\n                </span>\r\n            </div>\r\n              <div className='modal-body'>{text}\r\n              </div>\r\n            <div className='modal-body btns'>\r\n              {modalBtns}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n   )}\r\n\r\n\r\nModal.propTypes = {\r\n  header: PropTypes.string,\r\n  closeModal: PropTypes.func,\r\n  text: PropTypes.string\r\n}\r\n\r\nModal.defaultProps = {\r\n  closeBtn: 'X'\r\n}\r\n\r\n\r\nexport default Modal\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        const {bgColor, text, toggleBtn, className} = this.props\r\n        return (\r\n            <button onClick={toggleBtn} style={{background:bgColor}} className={className}>{text}</button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    bgColor: PropTypes.string,\r\n    text: PropTypes.string,\r\n    toggleModal: PropTypes.func,\r\n    className: PropTypes.string\r\n}\r\n\r\nexport default Button ","import \"./App.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport {  Switch, useHistory, Route} from \"react-router-dom\";\r\nimport cart from \"./svgIcons/cart.svg\";\r\nimport star from \"./svgIcons/unstar.svg\";\r\nimport homeIcon from \"./svgIcons/home.svg\";\r\nimport Goods from \"./Pages/Goods\";\r\nimport Favorite from \"./Pages/Favorite\";\r\nimport CartGoods from \"./Cart\";\r\nimport Modal from \"./Components/modal/Modal\";\r\nimport Button from \"./Components/buttons/BtnComponent\";\r\nimport { loadGoods } from \"./store/general/actions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { initialFavorites } from './store/favorites/actions';\r\nimport { initialCart, addToCartItem, removeFromCartId } from './store/cart/actions';\r\nimport { isModalAddToCartCloseModal, isModalCartRemoveItemClose } from \"./store/general/actions\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const reduxAllGoods = useSelector((state) => state.general.products);\r\n  const favFromRedux = useSelector((state) => state.favorites);\r\n  const cartFromRedux = useSelector((state) => state.cart)\r\n  const isModalAddToCartAction = useSelector((state) => state.general.isModalAddToCartOpen);\r\n  const nearestCartId = useSelector((state) => state.general.closestId);\r\n  const removeCartItemFromModal = useSelector((state) => state.general.isModalRemoveFromCart);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadGoods());\r\n    const favFromLocal = localStorage.getItem('favItems');\r\n    const cartFromLocal = localStorage.getItem('cartItems');\r\n    if(favFromLocal) {\r\n      dispatch(initialFavorites(JSON.parse(favFromLocal)));\r\n    }\r\n    if(cartFromLocal) {\r\n      dispatch(initialCart(JSON.parse(cartFromLocal)));\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favItems', JSON.stringify(favFromRedux))\r\n  }, [favFromRedux]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('cartItems', JSON.stringify(cartFromRedux))\r\n  }, [cartFromRedux]);\r\n\r\n\r\n  const addToCart = () => {\r\n    dispatch(addToCartItem(nearestCartId));\r\n    dispatch(isModalAddToCartCloseModal());\r\n  }\r\n\r\n\r\n  const removeFromCartItem = () => {\r\n    dispatch(removeFromCartId(nearestCartId));\r\n    dispatch(isModalCartRemoveItemClose());\r\n  };\r\n\r\n\r\n  const handleModalCloseAddToCart = () => {\r\n    dispatch(isModalAddToCartCloseModal());\r\n  };\r\n\r\n  const removeItemModalClose = () => {\r\n    dispatch(isModalCartRemoveItemClose());\r\n  }\r\n\r\n  const cartActions = (\r\n    <div>\r\n      <Button\r\n        toggleBtn={addToCart}\r\n        bgColor={\"rgba(0, 0, 0, 0.219)\"}\r\n        className={\"modalBtn close\"}\r\n        text={\"Add to cart\"}\r\n      />\r\n      <Button\r\n        toggleBtn={handleModalCloseAddToCart}\r\n        bgColor={\"rgba(0, 0, 0, 0.219)\"}\r\n        className={\"modalBtn close\"}\r\n        text={\"Cancel\"}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const deleteCartActions = (\r\n    <div>\r\n      <Button\r\n        toggleBtn={removeFromCartItem}\r\n        bgColor={\"rgba(0, 0, 0, 0.219)\"}\r\n        className={\"modalBtn close\"}\r\n        text={\"Delete\"}\r\n      />\r\n      <Button\r\n        toggleBtn={removeItemModalClose}\r\n        bgColor={\"rgba(0, 0, 0, 0.219)\"}\r\n        className={\"modalBtn close\"}\r\n        text={\"Cancel\"}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = (name) => {\r\n    history.push(`${name}`);\r\n  };\r\n\r\n  const locationCart = \"cart\";\r\n  const locationFavorite = \"favorite\";\r\n  const home = \"/\";\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n      <button onClick={() => handleClick(home)} className=\"homeIcon\">\r\n        <img src={homeIcon}  alt=\"home icon\"></img>\r\n      </button>\r\n      <button onClick={() => handleClick(locationCart)} className=\"btn-cart\">\r\n        {\" \"}\r\n        <span className=\"cart-c\">{cartFromRedux.length}</span>\r\n        <img className=\"cart\" src={cart} alt=\"cart\"></img>\r\n      </button>\r\n      <button\r\n        onClick={() => handleClick(locationFavorite)}\r\n        className=\"btn-favorite\"\r\n      >\r\n        {\" \"}\r\n        <span className=\"fav-c\">{favFromRedux.length}</span>\r\n        <img className=\"favorite\" src={star} alt=\"starfav\"></img>\r\n      </button>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Goods\r\n            showGoods={reduxAllGoods}\r\n          />\r\n        </Route>\r\n        <Route path=\"/cart\">\r\n          <CartGoods />\r\n        </Route>\r\n        <Route path=\"/favorite\">\r\n          <Favorite />\r\n        </Route>\r\n      </Switch>\r\n      {isModalAddToCartAction && <Modal modalBtns={cartActions} closeModal={handleModalCloseAddToCart}\r\n        header={'Adding to cart...'}\r\n        text={`Do you want to add \"${reduxAllGoods[nearestCartId].name.toUpperCase() } \" in cart?`} />}\r\n      {removeCartItemFromModal && <Modal  modalBtns={deleteCartActions} closeModal={removeItemModalClose}\r\n        header={'Deleting from cart...'}\r\n        text={`Do you want to delete \"${reduxAllGoods[nearestCartId].name.toUpperCase()}\" from cart?`}\r\n      />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { IS_MODAL_ADD_TO_CART_OPEN, CLOSE_TO_BUY_MODAL, BUYER_INFO, TO_BUY, LOADING_PRODUCTS, IS_MODAL_REMOVE_FROM_CART_CLOSE, IS_LOADING, SAVE_PRODUCTS, IS_MODAL_ADD_TO_CART_CLOSE, IS_MODAL_REMOVE_FROM_CART } from './types'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    products: [],\r\n    isModalAddToCartOpen: false,\r\n    closestId: [],\r\n    isModalRemoveFromCart: false,\r\n    toBuyModal: false,\r\n    buyerInformation: [],\r\n};\r\n\r\nconst generalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING_PRODUCTS:\r\n            return { ...state, isLoading: action.payload };\r\n        case SAVE_PRODUCTS:\r\n            return { ...state, products: action.payload };\r\n        case IS_MODAL_ADD_TO_CART_OPEN:\r\n            return { ...state, isModalAddToCartOpen: true, closestId: action.payload};\r\n        case IS_MODAL_ADD_TO_CART_CLOSE:\r\n            return { ...state, isModalAddToCartOpen: false}; \r\n        case IS_MODAL_REMOVE_FROM_CART:\r\n            return { ...state, isModalRemoveFromCart: true, closestId: action.payload};\r\n        case IS_MODAL_REMOVE_FROM_CART_CLOSE:\r\n            return { ...state, isModalRemoveFromCart: false };\r\n        case TO_BUY:\r\n            return { ...state, toBuyModal: true };\r\n        case CLOSE_TO_BUY_MODAL:\r\n            return { ...state, toBuyModal: false };\r\n        case BUYER_INFO: \r\n                return {...state, buyerInformation: action.payload };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default generalReducer;","import { SET_FAVORITES, INITIAL_FAVORITES } from './types';\r\n\r\nconst initialState = [];\r\n\r\nconst favReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIAL_FAVORITES:\r\n            return action.payload;\r\n        case SET_FAVORITES:\r\n            console.log('SET_FAVORITES', action.payload);\r\n        const currentFavId = action.payload;\r\n        console.log(currentFavId);\r\n        if (state.length === 0) {\r\n            return [currentFavId];\r\n        } else {\r\n            const existFavorite = state.find(\r\n                (favItems) => favItems === currentFavId\r\n            );\r\n            if (existFavorite) {\r\n                const newFavArr = state.filter(\r\n                    (item) => item !== currentFavId\r\n                );\r\n                return newFavArr;\r\n            } else {\r\n                return [currentFavId, ...state];\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default favReducer;","import { SET_CART, INITIAL_CART_ID, CART_PRODUCT_REMOVE, BUY_IMITATION} from './types';\r\n\r\nconst initialState = [];\r\n\r\nconst cartRootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIAL_CART_ID: \r\n            return action.payload;\r\n        case SET_CART: \r\n            const currentCartId = action.payload;\r\n        if(state.length === 0) {\r\n            return [currentCartId];\r\n        } else {\r\n            const existCart = state.find(\r\n                (cartItems) => cartItems === currentCartId\r\n            );\r\n            if (existCart) {\r\n                const newCartArr = state.filter(\r\n                    (item) => item !== currentCartId\r\n                );\r\n                return newCartArr;\r\n            } else {\r\n                return [currentCartId, ...state];\r\n            }\r\n        }\r\n        case CART_PRODUCT_REMOVE: \r\n            const clickedRemoveItemId = action.payload;\r\n            if(state.length === 0) {\r\n                return [...state];\r\n            } else {\r\n                const existRefreshCart = state.find(\r\n                    (cartItems) => cartItems === clickedRemoveItemId\r\n                );\r\n                if (existRefreshCart) {\r\n                    const refreshCartArr = state.filter(\r\n                        (item) => item !== action.payload\r\n                    );\r\n                    return refreshCartArr;\r\n                }\r\n            }\r\n        case BUY_IMITATION: \r\n            return state = []\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default cartRootReducer; ","import {createStore, compose, applyMiddleware, combineReducers} from 'redux';\r\nimport generalReducer from './general/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport favoriteReducer from './favorites/favReducer';\r\nimport cartReducer from './cart/cartReducer';\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  : (f) => f;\r\n\r\nconst rootReducer = combineReducers({\r\n    general: generalReducer,\r\n    favorites: favoriteReducer,\r\n    cart: cartReducer,\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), devTools)  \r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store/store';\r\n\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store} >\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}